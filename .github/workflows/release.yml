name: Build and Release

on:
  push:
    branches:
      - test_pipeline

permissions:
  contents: write  # Required to be able to publish a GitHub release
  issues: write  # Required to be able to comment on released issues
  pull-requests: write  # Required to be able to comment on released pull requests
  packages: write  # Required to be able to publish a GitHub package
  id-token: write # Required to be able to create a new release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate release changelog
      id: github_release
      uses: mikepenz/release-changelog-builder-action@v4.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.create_release }}

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.create_release }}
        custom_release_rules: fix:patch,new:minor,break:major
        default_bump: patch

    - name: Create a GitHub release
      uses: ncipollo/release-action@v1.14.0
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{steps.github_release.outputs.changelog}}
        token: ${{ secrets.create_release }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image
      run: |
        #!/bin/bash
        REPO_NAME=$(echo "ghcr.io/${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
        docker build -f Dockerfile -t $REPO_NAME:latest --push .

    - name: Build Go binaries
      run: |
        #!/bin/bash
        set -ex
        docker build -f builderDockerfile -t local/itcmt-cli-builder:latest .
        docker run --rm -v ${{ github.workspace }}:/workspace local/itcmt-cli-builder:latest cp /app/bin/itcmt-cli-amd64 /workspace/itcmt-cli-amd64
        docker run --rm -v ${{ github.workspace }}:/workspace local/itcmt-cli-builder:latest cp /app/bin/itcmt-cli-arm64 /workspace/itcmt-cli-arm64

    - name: Upload Release Asset (AMD64)
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.create_release }}
        file: itcmt-cli-amd64
        asset_name: itcmt-cli-amd64
        tag: ${{ steps.tag_version.outputs.new_tag }}
        overwrite: true
        body: "AMD64 binary for itcmt-cli"
    
    - name: Upload Release Asset (ARM64) 
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.create_release }}
        file: itcmt-cli-arm64
        asset_name: itcmt-cli-arm64
        tag: ${{ steps.tag_version.outputs.new_tag }}
        overwrite: true
        body: "AMD64 binary for itcmt-cli"
      
      